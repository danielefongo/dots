# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" "amdgpu"];
  boot.initrd.kernelModules = [ "amdgpu"];
  boot.kernelModules = [ "kvm-amd"  ];
  boot.extraModprobeConfig = ''
    options amdgpu dc=1
  '';
  boot.extraModulePackages = [ ];
  boot.kernelPackages = pkgs.linuxPackages_latest;

  fileSystems."/" =
    { device = "/dev/disk/by-label/ROOT";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-label/BOOT";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/mnt/data" =
    { device = "/dev/disk/by-label/data";
      fsType = "ext4";
      options = [ 
        "users" 
        "nofail" 
        "x-systemd.automount"
      ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp42s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.graphics.enable = true;
  hardware.graphics.extraPackages32 = with pkgs; [
    driversi686Linux.amdvlk 
  ];
  hardware.graphics.extraPackages = with pkgs; [
    vaapiVdpau
    libvdpau
    libva
    libva-utils
    amdvlk
  ];
  hardware.enableAllFirmware = true;
  hardware.firmware = with pkgs; [ firmwareLinuxNonfree ];
}
